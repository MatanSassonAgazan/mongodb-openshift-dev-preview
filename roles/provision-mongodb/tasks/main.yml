##############################################################################
## Provision mongodb
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################
- name: Create secrets for MongoDB Automation Agents
  k8s_v1_secret:
    name: "mongodb-{{ cluster_name }}"
    namespace: '{{ namespace }}'
    type: Opaque
    state: present
    string_data:
      agent-apikey: "{{ mms_agent_apikey }}"
      group-id: "{{ mms_group_id }}"
      base-url: "{{ mms_base_url }}"

- name: Create Service
  k8s_v1_service:
    name: "mongodb-service-{{ cluster_name }}"
    namespace: '{{ namespace }}'
    labels:
      name: "mongodb-service-{{ cluster_name }}"
    spec_selector:
      app: "mongodb-server-{{ cluster_name }}"
      role: "mongodb-server-{{ cluster_name }}"
    spec_ports:
      - port: "{{ mongodb_port | int }}"
    spec_cluster_ip: None

- name: Set fact for number of replicas
  set_fact:
    number_replicas : "{{ number_pods_rs }}"
    when: number_pods_rs is defined
  set_fact:
    number_replicas: "{{ number_pods_aa }}"
    when: number_pods_aa is defined

- name: Create StatefulSet
  k8s_v1beta1_stateful_set:
    name: "mongodb-server-{{ cluster_name }}"
    namespace: '{{ namespace }}'
    service_name: "mongodb-service-{{ cluster_name }}"
    replicas: "{{ number_replicas }}"
    spec_template_metadata_labels:
      app: "mongodb-server-{{ cluster_name }}"
      role: "mongodb-server-{{ cluster_name }}"
    spec_template_spec_termination_grace_period_seconds: 10
    containers:
      - name: "mongodb-server-{{ cluster_name }}"
        image: centos 
        env:
          - name: MMS_BASE_URL_INTERNAL
            valueFrom: 
              secretKeyRef:
                name: "mongodb-{{ cluster_name }}"
                key: base-url
          - name: MMS_AGENT_APIKEY
            valueFrom: 
              secretKeyRef:
                name: "mongodb-{{ cluster_name }}"
                key: agent-apikey
          - name: MMS_GROUP_ID
            valueFrom: 
              secretKeyRef:
                name: "mongodb-{{ cluster_name }}"
                key: group-id
          - name: MMS_BOOTSTRAP_URL
            value: "https://raw.githubusercontent.com/jasonmimick/mongodb-openshift-dev-preview/master/install-automation-agent.sh"
        command: [ '/bin/sh', '-c' ]
        args: [ "cd /tmp && curl -OL $(MMS_BOOTSTRAP_URL) && chmod +x install-automation-agent.sh && ./install-automation-agent.sh" ]
        ports:
        volumeMounts:
          - name: "pvc"
            mountPath: /data
    spec_volume_claim_templates:
      - name: "pvc"
        metadata:
          name: "pvc"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: "{{ disk_size_gb }}Gi"

